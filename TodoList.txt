
# TODO mettre sous git

######### AVANT LIVRAISON

# TODO license, readme

# TODO pyinstaller : possible de faire exécutable pour windows et linux qui ne requiere pas d'installer python et les modules utilises ?

# TODO mettre au propre le code, supprimer le code inutile en commentaire, enlever un maximum de warnings

# TODO ajouter des commentaires

# TODO nettoyer les prints

# TODO enlever les valeurs en dur dans le code (output_fps, output_bitrate, 1000000 pour le delegate)

# TODO enlever les lignes avec les chemins d'accès vers mes fichiers de test.

# TODO tester sur ubuntu

# TODO test :
# - video entierement silencieuse
# - video sans aucun silence
# - video commençant par silence (et dont c'est le seul silence)
# - video terminant par silence (et dont c'est le seul silence)
# - video ne commençant pas et ne terminant pas par un silence, avec plusieurs silences
# - video commençant et terminant par un silence, avec plusieurs silences

######### ABANDONNE

# TODO Choix du codec video et du codec audio par l'utilisateur
# (ou au moins demander le meme que dans la video d'entrée ? on peut le recuperer de la meme maniere que le bitrate)

# TODO Choix de la qualité par l'utilisateur

# TODO Fenetre d'aide illustree

# TODO Mettre un bouton permettant de deviner une valeur pas trop mauvaise pour noise_threshold (remplace le TODO matplotlib qui est couteux)
# pour cela prendre le tableau square_volumes, prendre une duree de 200ms (ou la duree dans le champ "max_silence_duration"),
# calculer le nombre d'indices correspondant m, et faire pour tout i la somme des indices de i à i+m.
# Prendre le minimum de ces sommes. Retrouver l'endroit correspondant. Prendre le square_volume maximum dans cet intervalle.
# Retourner la racine carree de ce nombre.

# TODO verifier si les barres de progression ralentissent les operations ?

# TODO ajouter un parametre "qualite output video" (ça ira plus vite pour celleux qui n'ont pas besoin d'une bonne qualité)

# TODO facto l'ouverture de videoclip et/ou de la production de square_volume

######### FAIT

# TODO ajouter infobulles et/ou instructions

# TODO resoudre le probleme du concatenate_videoclips suivi d'une preview sans modifier de module externe.
# Pour rappel j'ai touché AudioClip.py de moviepy (C:\User\Astrid\AppData\Local\Packages\PythonSoftwarFoundation.python.3.8\...),
# mais je pense qu'il suffit de réinstaller moviepy pour le restaurer.

# TODO message avertissement qui est recouverte par video preview (à supprimer ou corriger)

# TODO interdire somme offset > silence

# TODO video ajeter.mp4 : j'obtiens "Part kept from  0  s to  -4.545454545454545e-05  s. Time =  1603828296.7305343"
#      en 1er bout quand je fais Generate, et la fin de concatenate_videoclip est tres longue (voire infinie)

# TODO progress bar for output Video

# TODO on peut mettre des valeurs négatives (au moins dans le tableau des silences, et peut être ailleurs). A empecher

# TODO Mettre un bouton permettant d'afficher le matplotlib pour régler volume noise_threshold (necessite sqrt)

# TODO bug startoffset à 0

# TODO pouvoir régler 3 chiffres pour le noise_threshold

# TODO Mettre par defaut la qualité de la video d'entree.

# TODO mettre des unconnect pour éviter actions en double lorsqu'on fait previous/next, idem show/hide

# TODO tester les formats video supportés pour input et output, adapter les browsers et préciser les formats acceptes dans les instructions.
# Adapter aussi le code qui check les donneees d'entree.

# TODO faire en sorte que la preview soit en plein écran (et non décentré)

# TODO erreur lors de la preview du dernier silence

# TODO move SpecificParamWindow plus haut

# TODO colors

# TODO choix compression / rapidite (si ça vaut le coup, mais ça ça dépend peut être du codec)
# => au moins pour les mp4, vob et mkv en entrée, ça ne vaut pas le coup.
#    Surcoût en temps démesuré pour un impact très faible sur la taille du fichier de sortie.
